#!/bin/sh
####
## Original Author: Debian (https://salsa.debian.org/debian/lighttpd/-/blob/master/debian/lighttpd.init)
## Modified for LFS bootscript compatibility (Stephen Leaf)
### BEGIN INIT INFO
# Provides:          lighttpd
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the lighttpd web server.
# Description:       Fast and small webserver with minimal memory footprint
#                    developed with security in mind HTTP/1.1 compliant caching
#                    proxy server.
### END INIT INFO


PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/lighttpd
NAME=lighttpd
DESC="web server"
PIDFILE=/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

DAEMON_OPTS="-f /etc/lighttpd/lighttpd.conf"

test -x $DAEMON || exit 0

set -e

check_syntax()
{
    $DAEMON -tt $DAEMON_OPTS > /dev/null || exit $?
}

if [ "$1" != status ]; then
    # be sure there is a /run/lighttpd, even with tmpfs
    # The directory is defined as volatile and may thus be non-existing
    # after a boot (DPM ยง9.3.2)
    owner=www
    group=www
    [ -d /var/cache/lighttpd ] || \
        install -d -o $owner -g $group -m 0750 "/var/cache/lighttpd"
    [ -d /var/cache/lighttpd/compress ] || \
        install -d -o $owner -g $group -m 0750 "/var/cache/lighttpd/compress"
    [ -d /var/cache/lighttpd/uploads ] || \
        install -d -o $owner -g $group -m 0750 "/var/cache/lighttpd/uploads"
    [ -d /var/log/lighttpd ] || \
        install -d -o $owner -g $group -m 0750 "/var/log/lighttpd"
    [ -d /run/lighttpd ] || \
        install -d -o $owner -g $group -m 0750 "/run/lighttpd"
fi

. /lib/lsb/init-functions

case "$1" in
    start)
        check_syntax
        log_info_msg "Starting $DESC" $NAME
        start_daemon -f $DAEMON $DAEMON_OPTS
		evaluate_retval
        ;;
    stop)
        log_info_msg "Shutting $NAME $DESC down gracefully"
        [ -e $PIDFILE ] && killproc -p $PIDFILE $DAEMON -INT
		evaluate_retval
        ;;
	restart)
		$0 stop
		sleep 1
		$0 start
		;;
    reload)
        check_syntax
        log_info_msg "Reloading $DESC $NAME configuration"
		[ -e $PIDFILE ] && kill -USR1 $(cat $PIDFILE 2>/dev/null)
		evaluate_retval
        ;;
	reopen-logs)
        check_syntax
        log_info_msg "Reopening $DESC $NAME logs"
		[ -e $PIDFILE ] && kill -HUP $(cat $PIDFILE 2>/dev/null)
		evaluate_retval
		;;
    configtest|testconfig)
        check_syntax
        ;;
    status)
        statusproc -p $PIDFILE $DAEMON && exit 0 || exit $?
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|reload|reopen-logs|configtest|status}" >&2
        exit 1
        ;;
esac

exit 0
