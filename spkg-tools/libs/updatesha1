#!/bin/bash
####
## Finds and updates sha1sums for all files
## Author: Stephen Leaf <smileaf@me.com>
## Date: 2023-04-10 (rewrite of the old updateallsha1.sh)

## Set a few flags to ensure everything gets fetched and hashed.
VERIFY_SIG=0
ENABLE_TESTS=1
IGNORE_SHA=0
#VERBOSE=3
## Set an unstable ARCH if its not already so we hash them too
[[ ${ARCH:0:1} != "~" ]] && ARCH="~$ARCH"

####
## Hash the directory
hashdir() {
	PKG=$@
	echo
	echo -n "    Updating: $PKG: ["
	local dir=${PKG_BLD%/*}
	[[ -e $dir/sha1 ]] && rm $dir/sha1
	PKG=$(DB-getPkgList $PKG | fileToList)
	for p in $PKG; do
		unset SRC_URI PATCHES
		(
			setPkgENV $p > /dev/null
			echo -n " $PKG_VR"

			sha1sum "$PKG_BLD" | sed 's,  .*/,  ,' >> ${PKG_BLD%/*}/sha1
			source "$PKG_BLD"
			fetch_list "" "$(IFS=$'\n'; echo "${SRC_URI[*]}")" 'src' 1
			fetch_list "" "$(IFS=$'\n'; echo "${PATCHES[*]}")" 'patch' 1
		)
	done
	echo " ]"
}

####
## Check packages for any failures, if we find any rehash the entire package.
updatesha1() {
	list=$@

	## Get a directory listing for the given package
	## check the sha1sum of each file
	## if any file fails, rehash the entire directory.
	local updated=0
	for l in $list; do
		PKG=$(DB-getPkg $l)
		for p in $PKG; do
			## Unset these as some packages don't set them and will cause issues checking hashes.
			unset SRC_URI PATCHES
			setPkgENV $p > /dev/null

			PKG_BLD=$(getBldFile $PKG)
			if ! checkSha1 "${PKG_BLD%/*}" "$PKG_BLD"; then
				hashdir $PKG_CAT/$PKG_NAME
				updated=1
				break
			elif [[ $VERBOSE -gt 0 ]]; then
				echo -n " $PKG_VR"
			fi
			source "$PKG_BLD"
			if ! fetch_list "" "$(IFS=$'\n'; echo "${SRC_URI[*]}")" 'src'; then
				# A failed hash was found.
				hashdir $PKG_CAT/$PKG_NAME
				updated=1
				break
			elif [[ $VERBOSE -gt 0 ]]; then
				echo -n '.'
			fi
			if ! fetch_list "" "$(IFS=$'\n'; echo "${PATCHES[*]}")" 'patch'; then
				# A failed hash was found.
				hashdir $PKG_CAT/$PKG_NAME
				updated=1
				break
			elif [[ $VERBOSE -gt 0 ]]; then
				echo -n ','
			fi
		done
	done
	return $updated
}
