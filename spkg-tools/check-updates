#!/bin/bash

source /etc/spkg.conf
source "${INSTALL_PATH}/libs/pkg-utils"
source "${INSTALL_PATH}/libs/pkg-tools"

SRC_URI="https://gentoo.osuosl.org/distfiles/"
DISTFILES_INDEX="/tmp/distindex"
DISTFILES=/tmp/distfiles
UPDATE_LIST=/tmp/checkupdates

if [[ $(find "$DISTFILES_INDEX" -mtime +1 -print) || ! -e $DISTFILES_INDEX ]]; then
	cd ${DISTFILES_INDEX%/*}
	wget -O "$DISTFILES_INDEX" "$SRC_URI"
fi
echo Original: $(cat $DISTFILES_INDEX | wc -l) entries
grep "href=" $DISTFILES_INDEX | sed -e 's,.*href="\([^"]*\).*,\1,'> $DISTFILES
echo URLS: $(wc -l $DISTFILES) entries

FILTER=("\.patch"
		"\.crate"
		"\.asc"
		"\.sig"
		"\.diff"
		"/"
		"docs-html"
		"\.gem"
		"\-userguide"
		"\-rc[0-9]"
		"\-RC-"
		"\-beta"
		"pre[0-9]"
		"^which"
		"\.9[0-9]"
		"gettext-1"
		"gtk-4"
		"gtksourceview-[45]"
		"lmdb-1"
		"gnupg-2.7"
		"git-4"
		"luit-20"
		"mako-1.7"
		"bash-completion-20"
		"json-20"
		"zstd-[0-9]\.[0-9]\.[0-9]\.[0-9]"
)
for f in ${FILTER[@]}; do
	grep -iv $f $DISTFILES > ${DISTFILES}.new
	mv $DISTFILES{.new,}
done

echo Filtered: $(wc -l $DISTFILES) entries

for p in $(find $PKG_DB_DIR -mindepth 2 -type d | sed "s,$PKG_DB_DIR/,,"); do
	p=$(echo $p | sed "s,$PKG_DB_DIR/,,")
	PK=$p
	[[ $PK == accounts/* || $PK == spkg* || $PK == virtual/* || $PK == *git/* ]] && continue
#	echo -n "Checking $PK : "
	p=${p#*/}
	# Check Gentoo Distfiles for latest versions.

	# Alter the names for filename detection
	case "$p" in
		gtk+2) p="gtk\+-2" ;;
		gtk+3) p="gtk\+-3" ;;
		gtksourceview2) p=gtksourceview-2 ;;
		gtksourceview3) p=gtksourceview-3 ;;
		xz-utils) p=xz ;;
		libpcre) p=pcre- ;;
		libpcre2) p=pcre2 ;;
		libsdl) p=SDL-1 ;;
		libsdl2) p=SDL2 ;;
		llvm) p=llvm-project ;;
		maven-bin) p=apache-maven ;;
		btrfs-progs) p+=-v ;;
		musicbrainz) p=lib$p ;;
		xorg-proto) p=xorgproto ;;
		linux-headers|linux-kernel) p=linux-6 ;;
		lmdb) p=lmdbxx-0 ;;
		cdparanoia) p=cdparanoia-III ;;
		pam) p=Linux-${p^^};;
		xvid) p+=core ;;
		docbook-dtd) p=docbook-4 ;;
		docbook-xsl-nons) p=docbook-xsl ;;
		ghostscript-gpl) p=ghostscript ;;
	esac

	FILES=$(grep -P -i "^$p[-0-9\._]+(src|bin|orig|source)?.(tar|zip|tbz2|tgz)" $DISTFILES)

	# Get the correct versions
	case "$p" in
		gcc) FILES=$(echo $FILES| tr ' ' '\n' | grep -E -v "202[0-9]{5}" | tail -n2 | head -n1) ;;
		libopenmpt) FILES=$(grep -P -i "^$p-" $DISTFILES); FILES=${FILES//+release.autotools/} ;;
		ntp|openssh) FILES=$(grep -P "^$p-[0-9p]+" $DISTFILES | grep -v 'manpages') ;;
		timezone-data) FILES=$(grep -P "tzdata[0-9a-z]{5}" $DISTFILES) ;;
		unzip) FILES=$(grep -P unzip[0-9]+ $DISTFILES | sed -e 's,unzip,unzip-,' -e 's,\([0-9]\),\1.,g' -e 's,\.\.,.,') ;;
	esac
	FILE=$(echo $FILES | tr ' ' '\n' | sort -V | tail -n1)
	FILE_O=$FILE
	FILE=$(echo $FILE | sed -E -e 's,(-bin.*|[\.-]src.*|-source.*|\.orig|.tar.*|.tgz|.tbz2|.zip)$,,')


	# Do some package specific modifications here
	case "$p" in
		boost) FILE=${FILE/_/-}; FILE=${FILE//_/.} ;;
		btrfs-progs-v) FILE=${FILE/-v/-} ;;
		lvm2) FILE=$(echo $FILE|sed 's,LVM2\.,lvm2-,') ;;
		tcl) FILE=${FILE/tcl/tcl-} ;;
		timezone-data) FILE=${FILE/tzdata/} ;;
	esac

	# These apply to all packages.
	FILE=${FILE/.orig/}
	FILE=${FILE//_/-}

	PKG=$(DB-getPkg $PK | getLatest)
	PKG=${PKG##*/}
	[[ ${FILE##*-} == "" ]] && echo "Checking $PK : $PKG : ${FILE##*-}"
	if [[ ${FILE##*-} == $PKG ]]; then
		continue
	fi
	if version_gt ${FILE##*-} $PKG; then 
		echo $FILE [ $PK-$PKG ] $FILE_O >> $UPDATE_LIST
	fi
done
if [ -e $UPDATE_LIST ]; then
	cat $UPDATE_LIST
	rm $UPDATE_LIST
fi
