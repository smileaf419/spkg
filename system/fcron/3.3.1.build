####
## fcron build
## Copyright 2023-2024 spkg developers, licensed under GPLv2
HOMEPAGE=""
DESCRIPTION=""
LICENSE=""
SRC_URI="http://fcron.free.fr/archives/fcron-${PKG_VER}.src.tar.gz"
DEPS="system/libxcrypt system/readline"
BDEPS="accounts/fcron"
RDEPS=""
ARCHS="x86 x86_64"
SLOT=0

src_configure() {
	find doc -type f -exec sed -i 's:/usr/local::g' {} \;

	./configure --prefix=/usr \
				--sysconfdir=/etc \
				--localstatedir=/var \
				--without-sendmail \
				--with-boot-install=no \
				--with-systemdsystemunitdir=no \
				--with-editor=/bin/nano
}

src_test() { :; }

src_install() {
	install_default

	install-init.d fcron

	cat > ${D}/usr/bin/run-parts << "EOF"
#!/bin/sh
# run-parts:  Runs all the scripts found in a directory.
# from Slackware, by Patrick J. Volkerding with ideas borrowed
# from the Red Hat and Debian versions of this utility.

# keep going when something fails
set +e

if [ $# -lt 1 ]; then
	echo "Usage: run-parts <directory>"
    exit 1
fi

if [ ! -d $1 ]; then
	echo "Not a directory: $1"
	echo "Usage: run-parts <directory>"
	exit 1
fi

# There are several types of files that we would like to
# ignore automatically, as they are likely to be backups
# of other scripts:
IGNORE_SUFFIXES="~ ^ , .bak .new .rpmsave .rpmorig .rpmnew .swp"

# Main loop:
for SCRIPT in $1/* ; do
	# If this is not a regular file, skip it:
	if [ ! -f $SCRIPT ]; then
		continue
	fi
	# Determine if this file should be skipped by suffix:
	SKIP=false
	for SUFFIX in $IGNORE_SUFFIXES ; do
		if [ ! "$(basename $SCRIPT $SUFFIX)" = "$(basename $SCRIPT)" ]; then
			SKIP=true
			break
		fi
	done
	if [ "$SKIP" = "true" ]; then
		continue
	fi
	# If we've made it this far, then run the script if it's executable:
	if [ -x $SCRIPT ]; then
		$SCRIPT || echo "$SCRIPT failed."
	fi
done

exit 0
EOF
	chmod -v 755 ${D}/usr/bin/run-parts

	install -vdm754 ${D}/etc/cron.{hourly,daily,weekly,monthly}

	touch ${D}/etc/fcron.conf
	chmod 644 ${D}/etc/fcron.conf
	chgrp fcron ${D}/etc/fcron.conf
	inform "After starting fcron run: fcrontab -z -u systab"

	mkdir -p ${D}/var/spool/fcron
	cat > ${D}/var/spool/fcron/systab.orig << "EOF"
&bootrun 01 * * * * root run-parts /etc/cron.hourly
&bootrun 02 4 * * * root run-parts /etc/cron.daily
&bootrun 22 4 * * 0 root run-parts /etc/cron.weekly
&bootrun 42 4 1 * * root run-parts /etc/cron.monthly
EOF
}
