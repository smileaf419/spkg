####
## glibc build
## Copyright 2023 spkg developers, licensed under GPLv2
HOMEPAGE="https://www.gnu.org/software/libc/"
DESCRIPTION="GNU libc C Library"
LICENSE="LGPL-2.1+ BSD HPND ISC inner-net rc PCRE"
SRC_URI=("https://ftp.gnu.org/gnu/glibc/glibc-${PKG_VER}.tar.xz")
[[ $VERIFY_SIG == 1 ]] && SRC_URI+=("https://ftp.gnu.org/gnu/glibc/glibc-${PKG_VER}.tar.xz.sig")
PATCHES=("https://www.linuxfromscratch.org/patches/lfs/development/glibc-2.38-fhs-1.patch")
DEPS=""
BDEPS="system/linux-headers"
RDEPS="system/libxcrypt"
IUSE="gd"
use-enable gd && UDEPS="media/gd apps/bzip2 devel/expat devel/libpcre media/fontconfig media/freetype media/libpng media/libwebp system/zlib"
ARCHS="x86 x86_64"
SLOT=0
BUILD_SEPERATE_DIR=yes
MULTILIB="64 32 x32"
_SPKG_CLEAN=rm

src_configure() {
	## Ensure ldconfig and sln are installed into /sbin
	echo "rootsbindir=/sbin" > ../configparms

	if [[ -z $LIB ]]; then
		mkdir -pv $D/$ROOT/lib{,64}
		ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64
		ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64/ld-lsb-x86-64.so.3
	else
		export CC="gcc -m$LIB"
		export CXX="g++ -m$LIB"
	fi
	configure_default --prefix=/usr                 \
				 --bindir=/bin                      \
				 --libdir=/lib$LIB                  \
				 --enable-kernel=6.4                \
				 --with-headers=/usr/include        \
				 --enable-multi-arch                \
				 libc_cv_slibdir=/lib$LIB           \
                 --disable-werror                   \
                 --enable-stack-protector=strong    \
                 $(use-enable gd || echo --with-gd=no)
}

src_compile() {
	compile_default

	## This test fails in a partial LFS environment
	sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile
}

src_install() {
	if [[ -z $LIB ]]; then
		install_default

		## Fix a hardcoded path
		sed '/RTLDLIST=/s@/usr@@g' -i "${D}/$ROOT"/usr/bin/ldd

		cp -v ../nscd/nscd.conf "${D}/$ROOT"/etc/nscd.conf
		mkdir -pv "${D}/$ROOT"/var/cache/nscd
	else
		make DESTDIR=$PWD/DESTDIR install &&
		cp -a DESTDIR/lib$LIB $D/$ROOT &&
		install -vm644 DESTDIR/usr/include/gnu/{lib-names,stubs}-$LIB.h \
					   $D/$ROOT/usr/include/gnu/ &&
		if [[ $LIB == 32 ]]; then
			ln -svf ../lib32/ld-linux.so.2 $D/$ROOT/lib/ld-linux.so.2 || die "Error building glibc 32bit"
		else
			ln -svf ../libx32/ld-linux-x32.so.2 $D/$ROOT/lib/ld-linux-x32.so.2 || die "Error building glibc x32bit"
		fi
	fi
}

post_install() {
	echo " * Installing Locales"
	mkdir -p /usr/lib/locale

	$INSTALL_PATH/locales

	if [ ! -e "/etc/nsswitch.conf" ]; then
		cat > "/etc/nsswitch.conf" << "EOF"
passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files
EOF
	fi

	if [ ! -e "/etc/ld.so.conf" ]; then
		cat > /etc/ld.so.conf << "EOF"
/usr/local/lib
/opt/lib
include /etc/ld.so.conf.d/*.conf

EOF
		mkdir -p "/etc/ld.so.conf.d"
	fi
}

bootstrap() {
	## /lib    64bit
	## /lib64  64bit
	## /lib32  32bit
	## /libx32 x32bit

	for LIB in 64 32 x32; do
		if [[ $LIB == 64 ]]; then
			LIB=
			mkdir -pv $D/$ROOT/lib{,64}
			ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64
			ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64/ld-lsb-x86-64.so.3
			echo "rootsbindir=/sbin" > configparms
			CONF_FLAGS=' '
			sed '/RTLDLIST=/s@/usr@@g' -i "$D/$ROOT"/bin/ldd
		else
			make clean
			find .. -name "*.a" -delete
			export CC="$BOOTSTRAP_TGT-gcc -m$LIB"
			export CXX="$BOOTSTRAP_TGT-g++ -m$LIB"
		fi
		configure_default --prefix=/usr              \
						  --bindir=/bin               \
						  --libdir=/lib$LIB            \
						  --enable-kernel=6.4            \
						  --enable-multi-arch             \
						  --with-headers=$ROOT/usr/include  \
						  --build=$(../scripts/config.guess) \
						  libc_cv_slibdir=/lib$LIB &&
		compile_default
		if [[ -z $LIB ]]; then
			install_default
		else
			src_install
		fi
	done
}
