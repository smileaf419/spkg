####
## glibc build
## Copyright 2023 spkg developers, licensed under GPLv2
HOMEPAGE="https://www.gnu.org/software/libc/"
DESCRIPTION="GNU libc C Library"
LICENSE="LGPL-2.1+ BSD HPND ISC inner-net rc PCRE"
SRC_URI=("https://ftp.gnu.org/gnu/glibc/glibc-${PKG_VER}.tar.xz")
[[ $VERIFY_SIG == 1 ]] && SRC_URI+=("https://ftp.gnu.org/gnu/glibc/glibc-${PKG_VER}.tar.xz.sig")
PATCHES=(
"https://www.linuxfromscratch.org/patches/lfs/development/glibc-${PKG_VER}-fhs-1.patch"
"https://sourceware.org/git/?p=glibc.git;a=patch;h=542b1105852568c3ebc712225ae78b8c8ba31a78 => glibc-2.38-posix-memalign-1.patch"
"https://sourceware.org/git/?p=glibc.git;a=patch;h=0dc7fc1cf094406a138e4d1bcf9553e59edcf89d => glibc-2.38-posix-memalign-2.patch"
)
DEPS=""
BDEPS="system/linux-headers"
RDEPS="system/libxcrypt"
IUSE="gd"
use-enable gd && UDEPS="media/gd apps/bzip2 devel/expat devel/libpcre media/fontconfig media/freetype media/libpng media/libwebp system/zlib"
ARCHS="x86 x86_64"
SLOT=0
BUILD_SEPERATE_DIR=yes
ABILIBS="64 x32 32"
_SPKG_CLEAN=rm

src_configure() {
	## Ensure ldconfig and sln are installed into /sbin
	echo "rootsbindir=/sbin" > ../configparms

	if [[ $ABILIB == 64 ]]; then
		mkdir -pv $D/$ROOT/lib{,64}
		ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64
		ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64/ld-lsb-x86-64.so.3
		unset CC CXX
	else
		export CC="gcc -m$ABILIB"
		export CXX="g++ -m$ABILIB"
	fi
	## Set a CONF_FLAG as it'll set a libdir=lib64 and we need lib
	CONF_FLAGS=--prefix=/usr
	configure_default --bindir=/bin       \
				 --libdir=$(libdir 1 1)    \
				 --libexecdir=$(libdir 1 1) \
				 --enable-kernel=6.4          \
				 --with-headers=/usr/include   \
				 --enable-multi-arch             \
				 libc_cv_slibdir=$(libdir 1 1)    \
                 --disable-werror                  \
                 --enable-stack-protector=strong    \
                 $(use-enable gd || echo --with-gd=no)
}

src_compile() {
	compile_default

	## This test fails in a partial LFS environment
	sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile
}

src_install() {
	## in src_configure we set ABILIB= to avoid installing libraries into /lib64
	if [[ $ABILIB == 64 ]]; then
		install_default

		## Fix a hardcoded path
		sed '/RTLDLIST=/s@/usr@@g' -i "${D}/$ROOT"/bin/ldd

		cp -v ../nscd/nscd.conf "${D}/$ROOT"/etc/nscd.conf
		mkdir -pv "${D}/$ROOT"/var/cache/nscd
		touch $D/$ROOT/var/cache/nscd/.keep
	else
		make DESTDIR=$PWD/DESTDIR install &&
		mkdir -p $D/$ROOT/{lib,usr/include/gnu} &&
		cp -a DESTDIR/$ABILIB $D/$ROOT &&
		install -vm644 DESTDIR/usr/include/gnu/{lib-names,stubs}-$ABILIB.h \
					   $D/$ROOT/usr/include/gnu/ || die " $ERROR_DIALOG Failed to install $ABILIB"
		if [[ $ABILIB == 32 ]]; then
			ln -svf ../lib32/ld-linux.so.2 $D/$ROOT/lib/ld-linux.so.2 || die " $ERROR_DIALOG Error building glibc 32bit"
		else
			ln -svf ../libx32/ld-linux-x32.so.2 $D/$ROOT/lib/ld-linux-x32.so.2 || die " $ERROR_DIALOG Error building glibc x32bit"
		fi
	fi
}

post_install() {
	echo " * Installing Locales"
	mkdir -p /usr/lib/locale

	$INSTALL_PATH/locales

	if [ ! -e "/etc/nsswitch.conf" ]; then
		cat > "/etc/nsswitch.conf" << "EOF"
passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files
EOF
	fi

	if [ ! -e "/etc/ld.so.conf" ]; then
		cat > /etc/ld.so.conf << "EOF"
/usr/local/lib
/opt/lib
include /etc/ld.so.conf.d/*.conf

EOF
		mkdir -p "/etc/ld.so.conf.d"
	fi
}

bootstrap() {
	## /lib    single ABI 64bit (or 32bit if x86 arch)
	## /lib64  64bit with multilib
	## /lib32  32bit
	## /libx32 x32bit

	for ABILIB in $ABILIBS; do
		echo " * Building for $ABILIB"
		if [[ $ABILIB == 64 ]]; then
			unset CC CXX
			mkdir -pv $D/$ROOT/lib{,64}
			ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64
			ln -sfv ../lib/ld-linux-x86-64.so.2 $D/$ROOT/lib64/ld-lsb-x86-64.so.3
			echo "rootsbindir=/sbin" > configparms
			local TGT=$HOST_TGT
		else
			local TGT=$HOST_TGTx32
			[[ $ABILIB == 32 ]] && TGT=$HOST_TGT32
			export CC="$HOST_TGT-gcc -m$ABILIB"
			export CXX="$HOST_TGT-g++ -m$ABILIB"
		fi

		../configure --prefix=/usr            \
					 --bindir=/bin             \
					 --libdir=$(libdir 1 1)      \
					 --libexecdir=/$(libdir 1 1)  \
					 --enable-kernel=6.4            \
					 --enable-multi-arch             \
					 --with-headers=$ROOT/usr/include  \
					 --build=$(../scripts/config.guess) \
					 --host=$TGT                          \
					 libc_cv_slibdir=$(libdir 1 1) &&
		compile_default &&
		src_install
		make clean
		find .. -name "*.a" -delete -print
	done
}
