HOMEPAGE="https://kernel.org"
DESCRIPTION=""
#SRC_URI=("https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${PKG_VER}.tar.xz")
PATCHES=("")
LICENSE=""
DEPS=""
BDEPS=""
RDEPS=""
SLOT=6.1
BUILD_PATH="${D}/usr/src"
B=linux-$PKG_VER

URL_BASE="https://cdn.kernel.org/pub/linux/kernel/v$(getMajorVer $PKG_VER).x"

# Check for the main archive all the way back to the first Major release
# If One exists download the incr patches up to the current and apply those.
# if none exist, download the most recent.

if [[ $MODE != "search" ]]; then
	MV=$(getMajorVer $PKG_VER)
	MiV=$(getMinorVer $PKG_VER)
	MicV=$(getMicroVer $PKG_VER)
	Z=0
	for x in $(seq $MicV -1 1); do
		if [ -e "${DISTFILES}/linux-${MV}.${MiV}.${x}.tar.xz" ]; then
			Z=$x
			SRC_URI=("$URL_BASE/linux-${MV}.${MiV}.${x}.tar.xz")
			B=linux-${MV}.${MiV}.${x}
			[[ $VERBOSE -gt 0 ]] && echo "Found Archive: ${MV}.${MiV}.${x}"
			break
		fi
	done
	if [ $Z == 0 ]; then
		SRC_URI=("$URL_BASE/linux-${MV}.${MiV}.tar.xz")
		[[ $VERBOSE -gt 0 ]] && echo "Found Archive: ${MV}.${MiV}"
		B=linux-${MV}.${MiV}
		if [[ $MicV -gt 0 ]]; then
			PATCHES=("$URL_BASE/patch-${MV}.${MiV}.1.xz")
		fi
		Z=1
	fi
	[[ $VERBOSE -gt 0 ]] && echo "Getting Patches from $Z to $MicV"
	for x in $(seq $Z $(echo ${MicV}-1|bc)); do
		N=$(echo ${x}+1|bc)
		[[ $VERBOSE -gt 0 ]] && echo "Adding Incr Patch: ${MV}.${MiV}.${x}-${N}"
		PATCHES+=("$URL_BASE/incr/patch-${MV}.${MiV}.${x}-${N}.xz")
	done
fi

src_unpack() {
	unpack "${DISTFILES}/${SRC_FILE##*/}"
}

src_configure() { :; }

src_compile() { :; }

src_test() { :; }

src_install() {
	[[ $B != linux-${PKG_VER} ]] && mv -v $BUILD_PATH/$B $BUILD_PATH/linux-${PKG_VER} || exit 0
}

post_install() {
	inform " * Updating Kernel symlink to Linux ${PKG_VER}"
	rm -v /usr/src/linux                       
	ln -sfv /usr/src/linux-${PKG_VER} /usr/src/linux
}
